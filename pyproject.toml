[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "gitlint"
dynamic = ["version"]
description = "Git commit message linter written in python, checks your commit messages for style."
readme = "README.md"
license = "MIT"
requires-python = ">=3.7"
authors = [
    { name = "Joris Roovers" },
]
keywords = [
    "git",
    "gitlint",
    "lint",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Software Development :: Testing",
]
dependencies = [
    "gitlint-core[trusted-deps]==0.19.0dev",
]

[project.urls]
Changelog = "https://github.com/jorisroovers/gitlint/blob/main/CHANGELOG.md"
Documentation = "https://jorisroovers.github.io/gitlint"
Homepage = "https://jorisroovers.github.io/gitlint"
Source = "https://github.com/jorisroovers/gitlint"

[tool.hatch.version]
path = "gitlint-core/gitlint/__init__.py"

# [tool.hatch.build.targets.sdist]
# include = [
#     "/gitlint",
# ]
# Environments ########################################################################################
[tool.hatch.envs.default]
skip-install = true
dependencies = [
    "gitlint-core[trusted-deps] @ {root:uri}/gitlint-core",
]

[tool.hatch.envs.test]
skip-install = true
dependencies = [
    "gitlint-core[trusted-deps] @ {root:uri}/gitlint-core",
    "black==22.10.0",
    "coverage==6.4.4",
    "python-coveralls==2.9.3",
    "radon==5.1.0",
    "pytest==7.2.0",
    "pylint==2.15.3",
    "pdbr==0.7.5; sys_platform != \"win32\""
]

[tool.hatch.envs.test.scripts]
unit-tests = "pytest gitlint-core {args}"
u = "unit-tests"
format = "black --check --diff ."
lint = "pylint gitlint-core/gitlint qa"

all = [
    "unit-tests",
    "format",
]
# gitlint = "gitlint" # Circular expansion detected for field `tool.hatch.envs.default.scripts`: gitlint -> gitlint

[tool.hatch.envs.qa]
skip-install = true
dependencies = [
    "sh==1.14.3",
    "pytest==7.2.0",
    "arrow==1.2.3",
]
[tool.hatch.envs.qa.scripts]
integration-tests = "pytest qa {args}"
i = "integration-tests"


[tool.hatch.envs.docs]
skip-install = true
dependencies = [
    "mkdocs==1.4.2"
]
[tool.hatch.envs.docs.scripts]
build = "mkdocs build --clean --strict"
serve = "mkdocs serve"

[tool.black]
target_version = ['py36', 'py37', 'py38','py39','py310']
line-length = 120
# extend-exclude: keep excluding files from .gitignore in addition to the ones specified
extend-exclude =  "gitlint-core/gitlint/tests/samples/user_rules/import_exception/invalid_python.py"